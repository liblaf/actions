# ref: <https://git-cliff.org/docs/configuration/>
# ref: <https://github.com/orhun/git-cliff/blob/main/cliff.toml>

[bump]
features_always_bump_minor = false
breaking_always_bump_major = false
initial_tag = "0.0.0"

[changelog]
header = """
# Changelog

All notable changes to this project will be documented in this file.

"""
body = """
{%- macro remote_url() -%}
  https://github.com/{{ remote.github.owner }}/{{ remote.github.repo }}
{%- endmacro -%}

{% macro print_commit(commit) -%}
    - {% if commit.scope %}**{{ commit.scope }}:** {% endif %}\
        {% if commit.breaking %}[**breaking**] {% endif %}\
        {{ commit.message }} - \
        ([{{ commit.id | truncate(length=7, end="") }}]({{ self::remote_url() }}/commit/{{ commit.id }}))\
{% endmacro -%}

{% if version %}\
    {% if previous.version %}\
        ## [{{ version | trim_start_matches(pat="v") }}]\
          ({{ self::remote_url() }}/compare/{{ previous.version }}..{{ version }}) - {{ timestamp | date(format="%Y-%m-%d") }}
    {% else %}\
        ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
    {% endif %}\
{% else %}\
    ## [unreleased]
{% endif %}\

{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits
    | filter(attribute="scope")
    | sort(attribute="scope") %}
        {{ self::print_commit(commit=commit) }}
    {%- endfor %}
    {% for commit in commits %}
        {%- if not commit.scope -%}
            {{ self::print_commit(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endfor -%}
{%- if github -%}
{% if github.contributors | filter(attribute="is_first_time", value=true) | length != 0 %}
  ## ❤️ New Contributors
{% endif %}\
{% for contributor in github.contributors | filter(attribute="is_first_time", value=true) %}
  * @{{ contributor.username }} made their first contribution
    {%- if contributor.pr_number %} in \
      [#{{ contributor.pr_number }}]({{ self::remote_url() }}/pull/{{ contributor.pr_number }}) \
    {%- endif %}
{%- endfor -%}
{%- endif %}

"""
footer = """
<!-- generated by git-cliff -->
"""
trim = true
render_always = false

[git]
conventional_commits = true
filter_unconventional = false
split_commits = false
commit_preprocessors = [
  # Remove gitmoji, both actual UTF emoji and :emoji:
  { pattern = ' *(:\w+:|[\p{Emoji_Presentation}\p{Extended_Pictographic}](?:\u{FE0F})?\u{200D}?) *', replace = "" },
]
commit_parsers = [
  { message = "^(?<type>\\w+)(\\((?<scope>\\w+)\\))?(?<breaking>!):", group = "<!-- 00 -->💥 Breaking Change" },
  { message = "BREAKING CHANGE", group = "<!-- 00 -->💥 Breaking Change" },
  { message = "sync with repo(sitory)? template", skip = true },
  { message = "sync with template repo(sitory)?", skip = true },
  { message = "pre-commit autoupdate", skip = true },
  { message = "update pre-commit hooks", skip = true },
  { message = "^\\w+\\(deps(-dev)?\\):", group = "<!-- 99 -->⬆️ Dependencies" },
  { message = "^feat", group = "<!-- 10 -->✨ Features" },
  { message = "^fix", group = "<!-- 20 -->🐛 Bug Fixes" },
  { message = "^perf", group = "<!-- 30 -->⚡ Performance Improvements" },
  { message = "^revert", group = "<!-- 40 -->⏪ Reverts" },
  { message = "^docs", group = "<!-- 50 -->📝 Documentation" },
  { message = "^style", group = "<!-- 60 -->💄 Styles" },
  { message = "^chore", group = "🎫 Chores", skip = true },
  { message = "^refactor", group = "<!-- 70 -->♻ Code Refactoring" },
  { message = "^test", group = "<!-- 80 -->✅ Tests" },
  { message = "^build", group = "<!-- 85 -->👷 Build System" },
  { message = "^ci", group = "<!-- 90 -->🔧 Continuous Integration" },
]
protect_breaking_commits = true
filter_commits = false
tag_pattern = "v[0-9].*"
skip_tags = "alpha|beta"
ignore_tags = "rc"
topo_order = false
sort_commits = "oldest"
