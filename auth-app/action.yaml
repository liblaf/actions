name: Authenticate GitHub App

author: liblaf

description: TODO

inputs:
  app-id:
    description: GitHub App ID
    required: false
  private-key:
    description: GitHub App private key
    required: false

outputs:
  author:
    description: author
    value: ${{ steps.author.outputs.author }}
  author-name:
    description: author-name
    value: ${{ steps.author.outputs.author-name }}
  author-email:
    description: author-email
    value: ${{ steps.author.outputs.author-email }}
  committer:
    description: committer
    value: ${{ steps.committer.outputs.committer }}
  committer-name:
    description: committer-name
    value: ${{ steps.committer.outputs.committer-name }}
  committer-email:
    description: committer-email
    value: ${{ steps.committer.outputs.committer-email }}
  token:
    description: GitHub installation access token
    value: ${{ steps.app.outputs.token || github.token }}

runs:
  using: composite
  steps:
    - name: Create GitHub App Token
      id: app
      uses: actions/create-github-app-token@v1
      with:
        app-id: ${{ inputs.app-id }}
        private-key: ${{ inputs.private-key }}
      continue-on-error: true
    - id: author
      name: Config Git Author
      run: |-
        export GIT_AUTHOR_NAME="${{ github.actor }}"
        export GIT_AUTHOR_EMAIL="${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
        export GIT_AUTHOR="${GIT_AUTHOR_NAME} <${GIT_AUTHOR_EMAIL}>"
        echo "GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME}" >> "$GITHUB_ENV"
        echo "GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL}" >> "$GITHUB_ENV"
        echo "GIT_AUTHOR=${GIT_AUTHOR}" >> "$GITHUB_ENV"
        echo "author-name=${GIT_AUTHOR_NAME}" >> "$GITHUB_OUTPUT"
        echo "author-email=${GIT_AUTHOR_EMAIL}" >> "$GITHUB_OUTPUT"
        echo "author=${GIT_AUTHOR}" >> "$GITHUB_OUTPUT"
      shell: bash
    - id: committer
      name: Configure Git Committer
      run: |-
        if [[ "${{ steps.app.outcome }}" == "success" ]]; then
          app_slug="${{ steps.app.outputs.app-slug }}"
        else
          app_slug="github-actions"
        fi
        export GIT_COMMITTER_NAME="${app_slug}[bot]"
        id=$(gh api --jq '.id' "/users/${GIT_COMMITTER_NAME}")
        export GIT_COMMITTER_EMAIL="${id}+${GIT_COMMITTER_NAME}@users.noreply.github.com"
        export GIT_COMMITTER="${GIT_COMMITTER_NAME} <${GIT_COMMITTER_EMAIL}>"
        echo "GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME}" >> "$GITHUB_ENV"
        echo "GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL}" >> "$GITHUB_ENV"
        echo "GIT_COMMITTER=${GIT_COMMITTER}" >> "$GITHUB_ENV"
        echo "committer-name=${GIT_COMMITTER_NAME}" >> "$GITHUB_OUTPUT"
        echo "committer-email=${GIT_COMMITTER_EMAIL}" >> "$GITHUB_OUTPUT"
        echo "committer=${GIT_COMMITTER}" >> "$GITHUB_OUTPUT"
      shell: bash
      env:
        GH_TOKEN: ${{ steps.app.outputs.token || github.token }}
    - name: Configure Git
      run: |-
        git config --global user.name "${{ steps.committer.outputs.committer-name }}"
        git config --global user.email "${{ steps.committer.outputs.committer-email }}"
      shell: bash
