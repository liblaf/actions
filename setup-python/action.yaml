name: Setup Python

author: liblaf

description: TODO

inputs:
  python-version:
    description: The version of Python to set UV_PYTHON to
    required: false
    deprecationMessage: "`python-version` is no longer used."

outputs:
  pixi:
    description: pixi
    value: ${{ steps.manager.outputs.pixi }}
  uv:
    description: uv
    value: ${{ steps.manager.outputs.uv }}

runs:
  using: composite
  steps:
    - id: manager
      name: Detect Package Manager
      run: |-
        echo "pixi=${{ hashFiles('**/pixi.lock') != '' }}" >> "$GITHUB_OUTPUT"
        echo "uv=${{ hashFiles('**/uv.lock') != '' }}" >> "$GITHUB_OUTPUT"
      shell: bash
    - if: steps.manager.outputs.pixi == 'true'
      name: Setup Pixi
      uses: prefix-dev/setup-pixi@v0
      with:
        run-install: true
        activate-environment: true
        locked: false
    - if: steps.manager.outputs.pixi == 'true'
      name: Install Dependencies
      run: hatch build --hooks-only
      shell: bash
    - id: python
      if: steps.manager.outputs.uv == 'true'
      name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version-file: pyproject.toml
    - if: steps.manager.outputs.uv == 'true'
      name: Setup uv
      uses: astral-sh/setup-uv@v6
      with:
        python-version: ${{ steps.python.outputs.python-version }}
    - if: steps.manager.outputs.uv == 'true'
      name: Install Dependencies
      run: uv sync --all-extras --all-groups
      shell: bash
    - if: steps.manager.outputs.uv == 'true'
      name: Activate Venv
      run: |-
        source .venv/bin/activate
        echo "$VIRTUAL_ENV/bin" >> "$GITHUB_PATH"
        echo "VIRTUAL_ENV=$VIRTUAL_ENV" >> "$GITHUB_ENV"
      shell: bash
